{
  "version": 3,
  "sources": ["empty-module:~/models/page.server", "browser-route-module:/Users/s.richards/Documents/GitHub/remix-test/app/routes/$.jsx?browser", "../../../app/routes/$.jsx", "../../../app/utils/seo.js"],
  "sourcesContent": ["module.exports = {};", "export { default, meta } from \"/Users/s.richards/Documents/GitHub/remix-test/app/routes/$.jsx\";", "import { json } from \"@remix-run/node\"\nimport { useLoaderData } from \"@remix-run/react\"\nimport { getPage } from \"~/models/page.server\"\nimport { Seo } from \"~/utils/seo\"\nimport PageTemplate from \"~/components/templates/PageTemplate\"\n\nexport const meta = ({data}) => {\n  // console.log(data)\n  return Seo(data)\n};\n\n// Get page by path\nexport const loader = async ({params}) => {\n  const page = await getPage(params[\"*\"])\n  const canonical = `${process.env.FRONTEND_URL}${page.uri}`\n\n  return json({page, canonical})\n}\n\nexport default function Page() {\n  const { page } = useLoaderData()\n  return <PageTemplate data={page} />\n}", "export function Seo(data) {\n  const {\n    title, \n    metaDesc,\n    metaKeywords\n  } = data.page.seo\n  const {\n    canonical\n  } = data\n\n  return {\n    title: title,\n    description: metaDesc,\n    keywords: metaKeywords,\n    // \"og:image\": \"https://remix-jokes.lol/social.png\",\n    \"og:title\": title,\n    \"og:description\": metaDesc,\n    \"og:url\": canonical,\n    \"og:type\": \"website\",\n    // \"twitter:image\": \"https://remix-jokes.lol/social.png\",\n    \"twitter:card\": \"summary\",\n    \"twitter:creator\": \"Dewynters\",\n    \"twitter:title\": title,\n    \"twitter:description\": metaDesc,\n  };\n}"],
  "mappings": ";;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,WAAO,UAAU;AAAA;AAAA;;;ACAjB;;;ACAA;AAEA,kBAAwB;;;ACFxB;AAAO,aAAa,MAAM;AACxB,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,MACE,KAAK,KAAK;AACd,QAAM;AAAA,IACJ;AAAA,MACE;AAEJ,SAAO;AAAA,IACL;AAAA,IACA,aAAa;AAAA,IACb,UAAU;AAAA,IAEV,YAAY;AAAA,IACZ,kBAAkB;AAAA,IAClB,UAAU;AAAA,IACV,WAAW;AAAA,IAEX,gBAAgB;AAAA,IAChB,mBAAmB;AAAA,IACnB,iBAAiB;AAAA,IACjB,uBAAuB;AAAA;AAAA;;;ADjBpB,IAAM,OAAO,CAAC,EAAC,WAAU;AAE9B,SAAO,IAAI;AAAA;AAWE,iBAAgB;AAC7B,QAAM,EAAE,SAAS;AACjB,SAAO,oCAAC,MAAD;AAAA,IAAc,MAAM;AAAA;AAAA;",
  "names": []
}
